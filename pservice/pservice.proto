
// See http://github.com/plan-systems/plan-protobufs/


syntax = "proto3";

package pservice;

import "github.com/plan-systems/go-plan/plan/plan.proto";
import "github.com/plan-systems/go-plan/ski/ski.proto";






message SessionRequest {

    // Normally the empty string, this is used when an existing token is req'd
                bytes           session_token           = 1;

    // Which community this session wants to access
                bytes           community_id            = 2;

    // Identifies who is requesting the session (via pubkey)
                ski.PubKey      client_id               = 3;

    // Submits an authentication challenge for the host (so that the host can be validated).
                ski.SigBlock    challenge               = 4;

    // Additional keys, tokens, info, params
                plan.Block      params                  = 5;
}



message Msg {

    // Describes this msg in some way (optional)
                string          label                   = 1;

    // Reports any error/state condition.
                plan.Status     status                  = 2;

    // Holds arbitrary information/data
                plan.Block      body                    = 3;

    // A signature request/response from the host/server (typically a request to the client to sign something)
                ski.SigBlock    sig_block               = 4;
}




